<html>
	<meta http-equiv="content-type" content="text/html; charset=UTF8">
	<head>
		<title>3D-музей космической техники</title>
		<link href="../style.css" rel="stylesheet" type="text/css">
	
<script type="text/javascript" src="scripts/math3D.js"></script>
<script type="text/javascript" src="scripts/modelLoader.js"></script>

<input type="hidden" name="model" id="model" value="huygens"/>

<script id="fragment-shader" type="x-shader/x-fragment">
  #ifdef GL_ES
  precision highp float;
  #endif

  varying vec2 vTextureCoord;
  varying vec4 vTransformedNormal;
  varying vec4 vPosition;

  uniform float uMaterialShininess;

  uniform bool uShowSpecularHighlights;
  uniform bool uUseLighting;
  uniform bool uUseTextures;

  uniform vec3 uAmbientColor;

  uniform vec3 uPointLightingLocation;
  uniform vec3 uPointLightingSpecularColor;
  uniform vec3 uPointLightingDiffuseColor;

  uniform sampler2D uSampler;


  void main(void) {
    vec3 lightWeighting;
    if (!uUseLighting) {
      lightWeighting = vec3(1.0, 1.0, 1.0);
    } else {
      vec3 lightDirection = normalize(uPointLightingLocation - vPosition.xyz);
      vec3 normal = normalize(vTransformedNormal.xyz);

      float specularLightWeighting = 0.0;
      if (uShowSpecularHighlights) {
        vec3 eyeDirection = normalize(-vPosition.xyz);
        vec3 reflectionDirection = reflect(-lightDirection, normal);

        specularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), uMaterialShininess);
      }

      float diffuseLightWeighting = max(dot(normal, lightDirection), 0.0);
      lightWeighting = uAmbientColor
        + uPointLightingSpecularColor * specularLightWeighting
        + uPointLightingDiffuseColor * diffuseLightWeighting;
    }

    vec4 fragmentColor;
    if (uUseTextures) {
      fragmentColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
    } else {
      fragmentColor = vec4(1.0, 1.0, 1.0, 1.0);
    }
    gl_FragColor = vec4(fragmentColor.rgb * lightWeighting, fragmentColor.a);
  }
</script>

<script id="vertex-shader" type="x-shader/x-vertex">
  attribute vec3 aVertexPosition;
  attribute vec3 aVertexNormal;
  attribute vec2 aTextureCoord;

  uniform mat4 uMVMatrix;
  uniform mat4 uPMatrix;
  uniform mat4 uNMatrix;

  varying vec2 vTextureCoord;
  varying vec4 vTransformedNormal;
  varying vec4 vPosition;


  void main(void) {
    vPosition = uMVMatrix * vec4(aVertexPosition, 1.0);
    gl_Position = uPMatrix * vPosition;
    vTextureCoord = aTextureCoord;
    vTransformedNormal = uNMatrix * vec4(aVertexNormal, 1.0);
  }
</script>

<script type="text/javascript" src="scripts/shaders.js"></script>
<script type="text/javascript" src="scripts/app.js"></script>

		
	</head>
	<body onload="webGLStart();">
			<div class="helper">Управление:<br>W-Вращение вперед<br>S-Вращение назад<br>A-Вращение влево<br>D-Вращение вправо<br>Q-Отдалить<br>E-Приблизить</div>

		<table class="main" border="0" align="center">
			<tr>
				<td class="top" colspan="2"><img src="../images/text.png"></td>
			</tr>
			<tr>
				<td class="topmenu" colspan="2">
					<table class="topmenu_fr">
						<tr>
							<td><img src="../images/topmenu_start.png" align="right"></td>
							<td class="menuitem"><a class="menu" href="../ussr.htm">СССР</a></td>
							<td class="menuitem"><a class="menu" href="../usa.htm">США</a></td>
							<td class="menuitem"><a class="menu" href="../europe.htm">Европа</a></td>
							<td><img src="../images/topmenu_end.png" align="left"></td>
						</tr>
					</table>
				</td>
			</tr>
			<tr>
				<td class="left_panel">
	<!--					<ul>
						<li>Item 1</li>
						<li>Item 2</li>
						<li>Item 3</li>
						<li>Item 4</li>
					</ul> -->
				</td>
				
				<td class="text">
					<table class="main" border="1">
						<tr>
							<td>  <canvas id="app-canvas" style="border: 0;" width="700" height="480"></canvas></td>
						</tr>
						<tr>
							<td class="description"><b>«Huygens»</b> — зонд, созданный Европейским космическим агентством и названный в честь голландского астронома XVII века Христиана Гюйгенса.
<br><br><b>Цели</b><br>

Всего Huygens должен был выполнить 5 основных целей:<br>
1. Определить физические характеристики атмосферы Титана (плотность, давление, температура и т. д.) в зависимости от высоты;<br>
2. Измерить изобилие составляющих атмосферы;<br>
3. Исследовать атмосферную химию и фотохимию, особенно в отношении органических молекул, а также формирование и состав аэрозолей;<br>
4. Охарактеризовать метеорологию Титана, в частности физику облаков, грозовые разряды, и общую циркуляцию;<br>
5. Исследовать физическое состояние, топографию и состав поверхности Титана.<br>

</td>
						</tr>

					</table>
				</td>
			</tr>
					<td class="bottommenu" colspan="2"><br><a href="../index.htm">На главную</a> | <a href="../europe.htm">Европа</a><br><br>
			<tr>
				<td class="bottommenu" colspan="2">
					<img src="../images/opengl-logo-1-1.png" align="center" width="55px">
					<img src="../images/khronos.jpeg" align="center" width="150px">
					<img src="../images/webgl.gif" align="center" width="60px">
					</td>
			</tr>
			<tr>
					<td class="copyright" colspan="2">Дом Детского Творчества<br>Разработчик - Матюнин Павел</td>
			</tr>
				</tr>
		</table>
	</body>
</html>
